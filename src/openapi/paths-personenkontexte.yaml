get:
  tags:
    - Personenkontexte
  operationId: readPersonenkontexte
  security:
    - oAuthForServices: []
  summary: Auflistung von Personenkontexten.
  description: |
    Die Schnittstelle `/personenkontexte` bezieht sich auf das Anfordern und die
    Auflistung von Personenkontexten in Bezug zu der eigenen Organisation.

    Die Schnittstelle `/personenkontexte` ermöglicht das Verwenden von Filterparametern
    zur Präzisierung der Anfrage bei HTTP-GET. Werden mehrere Filter angegeben, so sind
    sie als mit 'und' verknüpft anzusehen. Die mehrfache Nutzung des gleichen Filters
    in einer Anfrage ist nicht zulässig. Entsprechen keine Werte den angegebenen Filtern, so wird als Resultat eine leere Liste geliefert. Folgende Tabelle listet die zur Verfügung
    stehenden Filter auf:

    Filter | Typ | Beschreibung
    --- | --- | ---
    `referrer` | String | Möglichkeit, die Ergebnisliste der Anfrage nach dem Fremdschlüssel `referrer` zu filtern. Der Schulconnex-Server überprüft, ob der Wert des Filterparameters ohne Beachtung von Groß- und Kleinschreibung im Filter-Attribut beinhaltet ist (contains).
    `mandant` | String | Möglichkeit, die Ergebnisliste der Anfrage nach dem Attribut `mandant` zu filtern. Der Schulconnex-Server überprüft, ob der Wert des Filterparameters unabhängig von Groß- und Kleinschreibung im Filter-Attribut beinhaltet ist (contains).
    `rolle` | String (Code) | Möglichkeit, die Ergebnisliste der Anfrage nach dem Attribut `personenkontext.rolle` zu filtern. Der Schulconnex-Server überprüft, ob der Wert des Filterparameters mit dem Wert des Filter-Attributs übereinstimmt (equals). Dem Filterparameter liegt eine Codeliste [Rolle](../../../codelisten#rolle) zugrunde.
    `personenstatus` | String (Code) | Möglichkeit, die Ergebnisliste der Anfrage nach dem Attribut „personenkontext.personenstatus” zu filtern. Der Schulconnex-Server überprüft, ob der Wert des Filterparameters mit dem Wert des Filter-Attributs übereinstimmt (equals). Dem Filterparameter liegt die Codeliste [Personenstatus](../../../codelisten#personenstatus) zugrunde.
    `sichtfreigabe` | String | erlaubt es Personen, abhängig davon aufzulisten, ob diese von einer anderen Organisation zum Lesen freigegeben wurden. Die möglichen Optionen sind `sichtfreigabe=ja`, um nur die durch externe Organisationen freigegebenen Personen beziehungsweise Personenkontexte aufzulisten, und `sichtfreigabe=nein`, um nur eigene Personen beziehungsweise Personenkontexte aufzulisten. Wird nicht nach Sichtfreigabe gefiltert, so werden alle lesbaren Personen, beziehungsweise Personenkontexte geliefert.

    Dieser Schnittstellenendpunkt gibt alle Personenkontexte zurück, auf die der
    Quellsystemanbieter zugreifen kann.

    Ein READ kann nur mit einer HTTP-GET Anfrage erfolgen. Die Antwort-Nutzdaten
    (Response Payload) beinhalten ein Array von JSON-Objekten vom Datentyp Personendatensatz
    mit dem jeweiligen Personenkontext und der zugeordneten Person, sofern Einträge
    (ggf. passend zu den optionalen Filtern) existieren.

    Siehe auch Datenmodell [`Personendatensatz`](../../../datenmodell/personendatensatz),
    Datenmodell [`Person`](../../../datenmodell/person) und
    Datenmodell [`Personenkontext`](../../../datenmodell/personenkontext).

    Die Antwort-Nutzdaten umfassen standardmäßig für das Attribut `personendatensatz.person`
    mit dem Datentyp Person nur die ID über das Attribut `personenkontext.person.id`.

    Die Antwort-Nutzdaten umfassen standardmäßig für das Attribut
    `personendatensatz.personenkontext.organisation` mit dem Datentyp Organisation alle
    nicht optionalen Attribute – also nur deren ID `personenkontext.organisation.id`.
  parameters:
    - in: query
      name: referrer
      schema:
        type: string
    - in: query
      name: mandant
      schema:
        type: string
    - in: query
      name: rolle
      schema:
        type: string
    - in: query
      name: personenstatus
      schema:
        type: string
    - in: query
      name: sichtfreigabe
      schema:
        type: string
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: './components-Personen.yaml'
    '400':
      description: |
        Bad Request

        Siehe [Fehlerbehandlung](../../../schnittstellendefinition/fehlerbehandlung)
    '401':
      description: |
        Unauthorized

        Siehe [Fehlerbehandlung](../../../schnittstellendefinition/fehlerbehandlung)
    '403':
      description: |
        Forbidden

        Siehe [Fehlerbehandlung](../../../schnittstellendefinition/fehlerbehandlung)
    '404':
      description: |
        Not found

        Siehe [Fehlerbehandlung](../../../schnittstellendefinition/fehlerbehandlung)
    '405':
      description: |
        Method not allowed

        Siehe [Fehlerbehandlung](../../../schnittstellendefinition/fehlerbehandlung)
